// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Reloading.Services.EF;

#nullable disable

namespace Reloading.Services.EF.Migrations
{
    [DbContext(typeof(ReloadingContext))]
    [Migration("20220224205642_EntityCaliberService")]
    partial class EntityCaliberService
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BulletLibrary.Bullet", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("DiameterId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ManufacturerId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("MassId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DiameterId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("MassId");

                    b.ToTable("Bullets");
                });

            modelBuilder.Entity("BulletLibrary.Diameter", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UnitType")
                        .HasColumnType("integer");

                    b.Property<double>("Value")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Diameters");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Diameter");
                });

            modelBuilder.Entity("BulletLibrary.Manufacturer", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Manufacturers");
                });

            modelBuilder.Entity("BulletLibrary.Mass", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("UnitType")
                        .HasColumnType("integer");

                    b.Property<double>("Value")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Masses");
                });

            modelBuilder.Entity("BulletLibrary.Caliber", b =>
                {
                    b.HasBaseType("BulletLibrary.Diameter");

                    b.Property<Guid?>("DiameterId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("PrimerType")
                        .HasColumnType("integer");

                    b.HasIndex("DiameterId");

                    b.HasDiscriminator().HasValue("Caliber");
                });

            modelBuilder.Entity("BulletLibrary.Bullet", b =>
                {
                    b.HasOne("BulletLibrary.Diameter", "Diameter")
                        .WithMany()
                        .HasForeignKey("DiameterId");

                    b.HasOne("BulletLibrary.Manufacturer", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId");

                    b.HasOne("BulletLibrary.Mass", "Mass")
                        .WithMany()
                        .HasForeignKey("MassId");

                    b.Navigation("Diameter");

                    b.Navigation("Manufacturer");

                    b.Navigation("Mass");
                });

            modelBuilder.Entity("BulletLibrary.Caliber", b =>
                {
                    b.HasOne("BulletLibrary.Diameter", "Diameter")
                        .WithMany()
                        .HasForeignKey("DiameterId");

                    b.Navigation("Diameter");
                });
#pragma warning restore 612, 618
        }
    }
}
